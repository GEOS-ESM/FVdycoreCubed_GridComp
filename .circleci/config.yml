version: 2.1

executors:
  gcc-build-env:
    docker:
      - image: gmao/ubuntu20-geos-env-mkl:6.0.13-openmpi_4.0.4-gcc_10.2.0
    environment:
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_btl_vader_single_copy_mechanism: none
    resource_class: xlarge

jobs:
  build-GEOSgcm:
    executor: gcc-build-env
    working_directory: /root/project
    steps:
      - run:
          name: "FVdycoreCubed_GridComp branch"
          command: echo ${CIRCLE_BRANCH}
      - checkout
      - run:
          name: "Checkout GEOSgcm fixture and update FVdycoreCubed_GridComp branch"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}
            git clone git@github.com:GEOS-ESM/GEOSgcm.git
            cd GEOSgcm
            mepo clone
            mepo develop GEOSgcm_GridComp GEOSgcm_App
            if [ "${CIRCLE_BRANCH}" != "develop" ] && [ "${CIRCLE_BRANCH}" != "master" ] && [ "${CIRCLE_BRANCH}" != "main" ]
            then
               mepo checkout-if-exists ${CIRCLE_BRANCH}
            fi
            mepo status
      - run:
          name: "CMake"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/GEOSgcm
            mkdir build
            cd build
            cmake .. -DBASEDIR=$BASEDIR/Linux -DCMAKE_Fortran_COMPILER=gfortran -DCMAKE_BUILD_TYPE=Debug -DUSE_F2PY=OFF
      - run:
          name: "Build and install"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/GEOSgcm/build
            make -j"$(nproc)" install
  build-GEOSfvdycore:
    executor: gcc-build-env
    working_directory: /root/project
    steps:
      - run:
          name: "FVdycoreCubed_GridComp branch"
          command: echo ${CIRCLE_BRANCH}
      - checkout
      - run:
          name: "Checkout GEOSfvdycore fixture and update FVdycoreCubed_GridComp branch"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}
            git clone git@github.com:GEOS-ESM/GEOSfvdycore.git
            cd GEOSfvdycore
            mepo clone
            if [ "${CIRCLE_BRANCH}" != "develop" ] && [ "${CIRCLE_BRANCH}" != "master" ] && [ "${CIRCLE_BRANCH}" != "main" ]
            then
               mepo checkout-if-exists ${CIRCLE_BRANCH}
            fi
            mepo status
      - run:
          name: "CMake"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/GEOSfvdycore
            mkdir build
            cd build
            cmake .. -DBASEDIR=$BASEDIR/Linux -DCMAKE_Fortran_COMPILER=gfortran -DCMAKE_BUILD_TYPE=Debug -DUSE_F2PY=OFF
      - run:
          name: "Build and install"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/GEOSfvdycore/build
            make -j"$(nproc)" install

workflows:
  version: 2.1
  build-and-test:
    jobs:
      - build-GEOSgcm
      - build-GEOSfvdycore

